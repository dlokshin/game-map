{"version":3,"sources":["effects/map.effect.js","lib/charts/BaseChart.js","lib/charts/tooltip/Tooltip.js","lib/charts/map/MapChart.js","lib/charts/map/MapChartComponent.jsx","views/map/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchMapData","a","d3","geo","fetchGames","url","axios","get","response","data","Promise","resolve","reject","_games","csv","fromString","subscribe","json","push","on","games","DEFAULT_MARGIN","top","right","bottom","left","BaseChart","parentId","dimension","margin","timeout","DEBOUNCE_TIME","handleOnResize","clearTimeout","setTimeout","update","this","parentEl","document","getElementById","window","addEventListener","getDimension","width","height","innerWidth","innerHeight","svg","getSvg","rootGroup","getGroup","draw","cb","removeEventListener","select","empty","append","attr","group","offsetWidth","offsetHeight","elementTag","className","parent","element","Tooltip","node","getNode","html","position","style","x","y","show","remove","initNode","body","appendChild","tooltipEl","querySelector","createElement","div","MapChart","props","handleClick","path","bounds","x0","y0","x1","y1","stopPropagation","transition","duration","call","zoom","transform","translate","scale","Math","min","max","resizeDots","dotGroup","selectAll","resetDots","zoomed","k","reset","invert","tooltip","scaleExtent","geoGroup","drawGeo","drawDots","features","topojson","objects","states","paths","enterPaths","enter","merge","exit","projection","gamesData","filter","game","lat","lon","map","origin","coordinates","dots","enterDots","mergeDots","d","delay","_","i","game_id","home_team","away_team","clientX","clientY","renderHTML","hide","MapChartComponent","useEffect","mapChart","id","Map","useState","isLoading","setIsLoading","setUrl","setGames","countries","setGeo","MapEffect","then","mapData","handleLoad","htmlFor","type","placehoder","value","onChange","e","target","onClick","disabled","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa1634d2.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport axios from 'axios';\nimport csv from 'csvtojson';\n\nexport const fetchMapData = async () => {\n    try {\n        const geo = await d3.json('https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json');\n        return geo;\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport const fetchGames = async (url) => {\n    try {\n        const response = await axios.get(url);\n        const data = response.data;\n        const games = await new Promise((resolve, reject) => {\n            let _games = [];\n            csv()\n                .fromString(data)\n                .subscribe((json) => {\n                    _games.push(json); \n                })\n                .on('done', () => {\n                    resolve(_games);\n                });\n        });\n\n        return games || [];\n    } catch (err) {\n        throw err;\n    }\n}","import * as d3 from 'd3';\n\nconst DEFAULT_MARGIN = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n};\n\nclass BaseChart {\n    timeout = null;\n    DEBOUNCE_TIME = 500;\n\n    constructor({ data, parentId, dimension, margin = DEFAULT_MARGIN }) {\n        this.data = data;\n        this.parentId = parentId;\n        this.margin = margin;\n        this.dimension = dimension;\n        this.parentEl = document.getElementById(parentId);\n\n        window.addEventListener('resize', this.handleOnResize);\n    }\n\n    update(data) {\n        this.data = data;\n        this.parentEl = this.parentEl || document.getElementById(this.parentId);\n\n        const dimension = this.getDimension();\n        this.width = dimension.width;\n        this.height = dimension.height;\n        this.innerWidth = this.width - this.margin.left - this.margin.right;\n        this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n\n        this.svg = this.getSvg();\n        this.rootGroup = this.getGroup();\n\n        this.draw();\n    }\n\n    /**\n     * Abstract method\n     */\n    draw() {\n\n    }\n\n    remove(cb) {\n        window.removeEventListener('resize', this.handleOnResize);\n        \n        if (typeof cb === 'function') {\n            cb();\n        }\n    }\n\n    getSvg() {\n        let svg = d3.select(this.parentEl).select('svg');\n        \n        if (svg.empty()) {\n            svg = d3.select(this.parentEl).append('svg');\n        }\n\n        svg\n            .attr('width', this.width)\n            .attr('height', this.height)\n\n        return svg;\n    }\n\n    getGroup() {\n        let group = this.svg.select('g');\n\n        if (group.empty()) {\n            group = this.svg.append('g');\n        }\n\n        return group.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n    }\n\n    getDimension() {\n        let width = this.dimension.width || this.parentEl.offsetWidth;\n        let height = this.dimension.height || this.parentEl.offsetHeight;\n\n        return {\n            width,\n            height\n        };\n    }\n\n    handleOnResize = () => {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n\n        this.timeout = setTimeout(() => {\n            this.update(this.data);\n        }, this.DEBOUNCE_TIME);\n    }\n\n    createElement(elementTag, className, parent) {\n        let element = parent.select(`${elementTag}.${className}`);\n\n        if (element.empty()) {\n            element = parent.append(elementTag);\n        }\n\n        return element.attr('class', className);\n    }\n\n}\n\nexport default BaseChart;","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor() {\n        this.node = this.getNode();\n    }\n\n    renderHTML(html, position) {\n        this.node\n            .style('left', (position.x + 16) + 'px')\n            .style('top', (position.y - 16) + 'px')\n            .html(html);\n\n        this.show();\n    }\n\n    show() {\n        this.node.style('opacity', 1);\n    }\n    \n    hide () {\n        this.node.style('opacity', 0);\n    };\n\n    destroy () {\n        if (this.node) {\n            this.node.remove();\n        }\n    };\n\n    getNode() {\n        if (!this.node) {\n            this.node = this.initNode();\n            document.body.appendChild(this.node);\n        }\n\n        return d3.select(this.node);\n    }\n\n    initNode() {\n        let tooltipEl = document.querySelector('.chart-tooltip');\n        \n        if (!tooltipEl) {\n            tooltipEl = document.createElement('div');\n        }\n\n        const div = d3.select(tooltipEl);\n\n        div\n            .attr('class', 'chart-tooltip')\n            .style('position', 'fixed')\n            .style('display', 'inline')\n            .style('opacity', 0)\n            .style('z-index', 9999)\n            .style('pointer-events', 'none')\n            .style('box-sizing', 'border-box')\n            .style('padding', '12px 16px')\n            .style('border-radius', '4px')\n            .style('background-color', '#ffffff')\n            .style('box-shadow', '0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)');\n    \n        return div.node();\n    }\n}\n\nexport default Tooltip;\n","import * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\n\nimport BaseChart from '../BaseChart';\nimport Tooltip from '../tooltip/Tooltip';\n\nclass MapChart extends BaseChart {\n    constructor(props) {\n        super(props);\n        this.tooltip = new Tooltip();\n    }\n\n    draw() {\n        super.draw();\n\n        this.zoom = d3.zoom()\n            .scaleExtent([1, 8])\n            .on('zoom', this.zoomed);\n\n        this.svg\n            .attr('viewBox', [0, 0, this.width, this.height])\n            .on('click', this.reset);\n\n        this.path = d3.geoPath();\n        this.geoGroup = this.createElement('g', 'geo-group', this.rootGroup);\n        this.dotGroup = this.createElement('g', 'dot-group', this.rootGroup);\n\n        this.drawGeo();\n        this.drawDots();\n\n        this.svg.call(this.zoom);\n    }\n\n    drawGeo() {\n        const features = topojson.feature(this.data.geo, this.data.geo.objects.states).features || [];\n\n        const paths = this.geoGroup.selectAll('path').data(features);\n        const enterPaths = paths.enter().append('path');\n        const mergePaths = paths.merge(enterPaths);\n\n        mergePaths\n            .attr('d', this.path)\n            .on('click', this.handleClick)\n\n        paths.exit().remove();\n    }\n\n    handleClick = (data) => {\n        const [[x0, y0], [x1, y1]] = this.path.bounds(data);\n        d3.event.stopPropagation();\n        this.svg.transition().duration(750).call(\n            this.zoom.transform,\n            d3.zoomIdentity\n                .translate(this.width / 2, this.height / 2)\n                .scale(Math.min(8, 0.9 / Math.max((x1 - x0) / this.width, (y1 - y0) / this.height)))\n                .translate(-(x0 + x1) / 2, -(y0 + y1) / 2),\n            d3.mouse(this.svg.node())\n        );\n        this.resizeDots();\n    }\n\n    drawDots() {\n        const projection = d3.geoAlbersUsa()\n            .translate([this.width / 2, this.height / 2])\n            .scale(1280);\n\n        const gamesData = this.data.games\n            .filter((game) => game.lat !== 'NULL' || game.lon !== 'NULL' )\n            .map((game) => {\n                const coordinates = projection([+game.lon, +game.lat]);\n                const origin = game;\n                return {\n                    origin,\n                    coordinates\n                };\n            })\n            .filter((game) => game.coordinates !== null);\n\n        const dots = this.dotGroup.selectAll('circle').data(gamesData);\n        const enterDots = dots.enter().append('circle');\n        const mergeDots = dots.merge(enterDots);\n\n        mergeDots\n            .attr(\"transform\", d => `translate(${d.coordinates})`)\n            .attr('r', 0)\n            .attr('fill-opacity', 1)\n            .attr('stroke-opacity', 0)\n            .transition()\n            .delay((_, i) => 50 * i)\n            .duration(500)\n            .attr('r', 6)\n            .attr('fill-opacity', 0)\n            .attr('stroke-opacity', 1);\n\n        mergeDots.on('mouseover', (d) => {\n                const html = `\n                    <div>\n                        <p>\n                            <small>game_id:</small> ${d.origin.game_id}\n                        </p>\n                        <p>\n                            ${d.origin.home_team} vs ${d.origin.away_team}\n                        </p>\n                    </div>\n                `;\n                const position = {\n                    x: d3.event.clientX,\n                    y: d3.event.clientY\n                };\n\n                this.tooltip.renderHTML(html, position);\n            })\n            .on('mouseout', (d) => {\n                this.tooltip.hide();\n            })\n\n        dots.exit().remove();\n    }\n\n    resizeDots = () => {\n        this.dotGroup.selectAll('circle')\n            .attr('r', 1);\n    }\n\n    resetDots = () => {\n        this.dotGroup.selectAll('circle')\n            .attr('r', 6);\n    }\n\n    zoomed = () => {\n        this.rootGroup.attr('transform', d3.event.transform);\n        this.rootGroup.attr('stroke-width', 1 / d3.event.transform.k);\n    }\n\n    reset = () => {\n        this.svg.transition().duration(750).call(\n            this.zoom.transform,\n            d3.zoomIdentity,\n            d3.zoomTransform(this.svg.node()).invert([this.width / 2, this.height / 2])\n        );\n        this.resetDots();\n    }\n}\n\nexport default MapChart;\n","import React, { useEffect } from 'react';\n\nimport MapChart from './MapChart';\n\nimport './styles.scss';\n\nfunction MapChartComponent(props) {\n    useEffect(() => {\n        let mapChart = null;\n        if (!mapChart) {\n            mapChart = new MapChart({\n                data: props.data,\n                parentId: props.id,\n                margin: props.margin,\n                dimension: {\n                    width: props.width,\n                    height: props.height,\n                }\n            });\n        }\n        \n        mapChart.update(props.data);\n    });\n\n    return (\n        <div className=\"map-chart\" id={props.id} />\n    );\n}\n\nexport default MapChartComponent;\n","import React, { useState, useEffect } from 'react';\n\nimport * as MapEffect from '../../effects/map.effect';\n\nimport { MapChart } from '../../lib/charts';\n\nimport './styles.scss';\n\nconst DEFAUTL_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRjeukJGxqPfW0mtYudNih4gQH2uQdQCWYNcFfo9Ecvxcl3PYOvGxmSTVzJ6L4hFFnSIfI8XuY51Ygj/pub?gid=1829641480&single=true&output=csv';\n\nfunction Map() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [url, setUrl] = useState(DEFAUTL_URL);\n    const [games, setGames] = useState([]);\n    const [geo, setGeo] = useState({ \n        objects: { states: [], countries: [] } \n    });\n\n    useEffect(() => {\n        MapEffect.fetchMapData().then((mapData) => {\n            setGeo(mapData);\n        });\n    }, []);\n\n    const handleLoad = async () => {\n        try {\n            setIsLoading(true);\n            const games = await MapEffect.fetchGames(url);\n            setGames(games);\n        } catch (err) {\n\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <form className=\"map-form\">\n                <div>\n                    <label htmlFor=\"url\">\n                        Add game url:\n                    </label>\n                    <input \n                        type=\"text\"\n                        placehoder=\"input game url\"\n                        value={url} \n                        onChange={(e) => setUrl(e.target.value)} \n                    />\n                </div>\n                <button \n                    type=\"button\" \n                    onClick={handleLoad}\n                    disabled={isLoading}\n                >\n                    {isLoading ? 'Loading...' : 'Load'}\n                </button>\n            </form>\n            <MapChart\n                id=\"map-chart-id\"\n                height={610}\n                width={975}\n                margin={{ \n                    top: 0, \n                    right: 0, \n                    bottom: 0, \n                    left: 0 \n                }}\n                data={{\n                    geo,\n                    games\n                }}\n            />\n        </div>\n    );\n}\n\nexport default Map;\n","import React from 'react';\nimport './App.css';\n\nimport Map from './views/map/Map';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}